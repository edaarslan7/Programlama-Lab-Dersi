def fibonacci_loop(n):
    a,b=0,1
    for i in range(n-1):
        a,b=b,a+b
    return a


print(fibonacci_loop(6))

def fibonacci_recursive(n):
    if(n<2):
        return n
    else:
        return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

print(fibonacci_recursive(6))



def factorial(n):
    s=1
    for i in range(1,n+1):
        s=s*i
    return s

print(factorial(5))

def factorial_recursive(n):
    if(n==1):
        return n
    else:
        return n*factorial_recursive(n-1)

print(factorial_recursive(5))



def power(m,n): #m^n       #linear
    s=m
    for i in range(1,n):
        s=s*m
    return s

print(power(2,3))

def power_recursive(m,n):   #binary
    if(n==0):
        return 1
    elif(n==1):
        return m
    elif(n%2==0):
        return power_recursive(m*m,n/2)
    elif(n%2!=0):
        return power_recursive(m*m,n//2)*m

print(power_recursive(2,4))
