#tek boyutlu dizi üretip bu diziyi bubble ve selection sort ile sıralama, dizide arama islemi, sıralı dizi üzerinde ikili arama yapan fonksiyon
import random

def generate_an_array(n):
    my_array=[]
    for i in range(n):
        s=random.randint(0,100)
        my_array.append(s)
    return my_array

my_arr_1=generate_an_array(10)
print(my_arr_1)

def bubble_sort(my_array):
    for i in range(len(my_array)-1,0,-1):
        for j in range(i):
            if(my_array[j]>my_array[j+1]):
                t=my_array[j]
                my_array[j]=my_array[j+1]
                my_array[j+1]=t

bubble_sort(my_arr_1)
print(my_arr_1)

def my_search_c(array_2,item):
    found=False
    indis=-1
    step=0
    for i in range(len(array_2)):
        step+=1
        if(array_2[i]==item):
            found=True
            indis=1
            break
    return (found,indis,step)

print(my_search_c(my_arr_1,42))

def selection_sort(my_array):
    swap_sayisi=0
    for i in range(len(my_array)-1,0,-1):
        positionOfMax=0
        for location in range(1,i+1):
            print("location: ",location,"i: ",i,end="\n")
            if(my_array[location]>my_array[positionOfMax]):
                positionOfMax=location
        temp=my_array[location]
        my_array[location]=my_array[positionOfMax]
        my_array[positionOfMax]=temp
        swap_sayisi+=1
    return my_array,swap_sayisi

def my_binary_search(my_array,item):
    counter=0
    first=0
    last=len(my_array)-1
    found=False
    while(first<=last and not found):
        midpoint=(first+last)//2
        if(my_array[midpoint]==item):
            found=True
        else:
            if(item<my_array[midpoint]):
               last=midpoint-1
            else:
                first=midpoint+1
        counter+=1
    return midpoint,found,counter

my_array=[21,23,12,44,25,2,7,16,14,12,11]
print(selection_sort(my_array))
print(my_binary_search(my_array,14))
